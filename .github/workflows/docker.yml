# build a docker image on demand. Assumes that there is a docker folder with
# docker context and Dockerfile
#
# This workflow is triggered manually since the Dockerfile will typically
# rely on a deployed version of the package in Pypi.
#
# The option 'push' determines whether this is a test build or the results
# are pushed to the image registry at ghcr.io

name: Build and publish a docker image to the organization
on:
  workflow_dispatch:
    inputs:
      push:
        description: "push to ghcr.io ?"
        required: false
        type: boolean
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build runtime image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: docker/
          # push the image to ghcr.io for tagged builds
          push: ${{ github.event.inputs.push }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref }}
          target: runtime
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
